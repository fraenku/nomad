// Code generated by protoc-gen-go. DO NOT EDIT.
// source: plugins/logging/proto/logging.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type StartRequest struct {
	LogDir               string   `protobuf:"bytes,1,opt,name=log_dir,json=logDir,proto3" json:"log_dir,omitempty"`
	StdoutFileName       string   `protobuf:"bytes,2,opt,name=stdout_file_name,json=stdoutFileName,proto3" json:"stdout_file_name,omitempty"`
	StderrFileName       string   `protobuf:"bytes,3,opt,name=stderr_file_name,json=stderrFileName,proto3" json:"stderr_file_name,omitempty"`
	MaxFiles             uint32   `protobuf:"varint,4,opt,name=max_files,json=maxFiles,proto3" json:"max_files,omitempty"`
	MaxFileSizeMb        uint32   `protobuf:"varint,5,opt,name=max_file_size_mb,json=maxFileSizeMb,proto3" json:"max_file_size_mb,omitempty"`
	StdoutFifo           string   `protobuf:"bytes,6,opt,name=stdout_fifo,json=stdoutFifo,proto3" json:"stdout_fifo,omitempty"`
	StderrFifo           string   `protobuf:"bytes,7,opt,name=stderr_fifo,json=stderrFifo,proto3" json:"stderr_fifo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StartRequest) Reset()         { *m = StartRequest{} }
func (m *StartRequest) String() string { return proto.CompactTextString(m) }
func (*StartRequest) ProtoMessage()    {}
func (*StartRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f403bc0514b74a53, []int{0}
}

func (m *StartRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartRequest.Unmarshal(m, b)
}
func (m *StartRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartRequest.Marshal(b, m, deterministic)
}
func (m *StartRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartRequest.Merge(m, src)
}
func (m *StartRequest) XXX_Size() int {
	return xxx_messageInfo_StartRequest.Size(m)
}
func (m *StartRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StartRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StartRequest proto.InternalMessageInfo

func (m *StartRequest) GetLogDir() string {
	if m != nil {
		return m.LogDir
	}
	return ""
}

func (m *StartRequest) GetStdoutFileName() string {
	if m != nil {
		return m.StdoutFileName
	}
	return ""
}

func (m *StartRequest) GetStderrFileName() string {
	if m != nil {
		return m.StderrFileName
	}
	return ""
}

func (m *StartRequest) GetMaxFiles() uint32 {
	if m != nil {
		return m.MaxFiles
	}
	return 0
}

func (m *StartRequest) GetMaxFileSizeMb() uint32 {
	if m != nil {
		return m.MaxFileSizeMb
	}
	return 0
}

func (m *StartRequest) GetStdoutFifo() string {
	if m != nil {
		return m.StdoutFifo
	}
	return ""
}

func (m *StartRequest) GetStderrFifo() string {
	if m != nil {
		return m.StderrFifo
	}
	return ""
}

type StartResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StartResponse) Reset()         { *m = StartResponse{} }
func (m *StartResponse) String() string { return proto.CompactTextString(m) }
func (*StartResponse) ProtoMessage()    {}
func (*StartResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f403bc0514b74a53, []int{1}
}

func (m *StartResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartResponse.Unmarshal(m, b)
}
func (m *StartResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartResponse.Marshal(b, m, deterministic)
}
func (m *StartResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartResponse.Merge(m, src)
}
func (m *StartResponse) XXX_Size() int {
	return xxx_messageInfo_StartResponse.Size(m)
}
func (m *StartResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StartResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StartResponse proto.InternalMessageInfo

type StopRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StopRequest) Reset()         { *m = StopRequest{} }
func (m *StopRequest) String() string { return proto.CompactTextString(m) }
func (*StopRequest) ProtoMessage()    {}
func (*StopRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f403bc0514b74a53, []int{2}
}

func (m *StopRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StopRequest.Unmarshal(m, b)
}
func (m *StopRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StopRequest.Marshal(b, m, deterministic)
}
func (m *StopRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopRequest.Merge(m, src)
}
func (m *StopRequest) XXX_Size() int {
	return xxx_messageInfo_StopRequest.Size(m)
}
func (m *StopRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StopRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StopRequest proto.InternalMessageInfo

type StopResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StopResponse) Reset()         { *m = StopResponse{} }
func (m *StopResponse) String() string { return proto.CompactTextString(m) }
func (*StopResponse) ProtoMessage()    {}
func (*StopResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f403bc0514b74a53, []int{3}
}

func (m *StopResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StopResponse.Unmarshal(m, b)
}
func (m *StopResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StopResponse.Marshal(b, m, deterministic)
}
func (m *StopResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopResponse.Merge(m, src)
}
func (m *StopResponse) XXX_Size() int {
	return xxx_messageInfo_StopResponse.Size(m)
}
func (m *StopResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StopResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StopResponse proto.InternalMessageInfo

// CapabilitiesRequest is used to get the capabilities of the logging plugin.
type CapabilitiesRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CapabilitiesRequest) Reset()         { *m = CapabilitiesRequest{} }
func (m *CapabilitiesRequest) String() string { return proto.CompactTextString(m) }
func (*CapabilitiesRequest) ProtoMessage()    {}
func (*CapabilitiesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f403bc0514b74a53, []int{4}
}

func (m *CapabilitiesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CapabilitiesRequest.Unmarshal(m, b)
}
func (m *CapabilitiesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CapabilitiesRequest.Marshal(b, m, deterministic)
}
func (m *CapabilitiesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CapabilitiesRequest.Merge(m, src)
}
func (m *CapabilitiesRequest) XXX_Size() int {
	return xxx_messageInfo_CapabilitiesRequest.Size(m)
}
func (m *CapabilitiesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CapabilitiesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CapabilitiesRequest proto.InternalMessageInfo

// CapabilitiesResponse returns the logging plugin's capabilities.
type CapabilitiesResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CapabilitiesResponse) Reset()         { *m = CapabilitiesResponse{} }
func (m *CapabilitiesResponse) String() string { return proto.CompactTextString(m) }
func (*CapabilitiesResponse) ProtoMessage()    {}
func (*CapabilitiesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f403bc0514b74a53, []int{5}
}

func (m *CapabilitiesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CapabilitiesResponse.Unmarshal(m, b)
}
func (m *CapabilitiesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CapabilitiesResponse.Marshal(b, m, deterministic)
}
func (m *CapabilitiesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CapabilitiesResponse.Merge(m, src)
}
func (m *CapabilitiesResponse) XXX_Size() int {
	return xxx_messageInfo_CapabilitiesResponse.Size(m)
}
func (m *CapabilitiesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CapabilitiesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CapabilitiesResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*StartRequest)(nil), "hashicorp.nomad.plugins.logging.StartRequest")
	proto.RegisterType((*StartResponse)(nil), "hashicorp.nomad.plugins.logging.StartResponse")
	proto.RegisterType((*StopRequest)(nil), "hashicorp.nomad.plugins.logging.StopRequest")
	proto.RegisterType((*StopResponse)(nil), "hashicorp.nomad.plugins.logging.StopResponse")
	proto.RegisterType((*CapabilitiesRequest)(nil), "hashicorp.nomad.plugins.logging.CapabilitiesRequest")
	proto.RegisterType((*CapabilitiesResponse)(nil), "hashicorp.nomad.plugins.logging.CapabilitiesResponse")
}

func init() {
	proto.RegisterFile("plugins/logging/proto/logging.proto", fileDescriptor_f403bc0514b74a53)
}

var fileDescriptor_f403bc0514b74a53 = []byte{
	// 369 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x92, 0x4d, 0x4f, 0xfa, 0x40,
	0x10, 0xc6, 0xff, 0xf0, 0xe7, 0x45, 0x06, 0x8a, 0x64, 0x7d, 0x6b, 0xf0, 0x00, 0xa9, 0x07, 0x39,
	0x48, 0x49, 0x7c, 0xf9, 0x02, 0x6a, 0x3c, 0xa9, 0x31, 0x70, 0xf3, 0xd2, 0x6c, 0x65, 0x5b, 0x36,
	0x69, 0x3b, 0x75, 0x77, 0x49, 0x08, 0x89, 0x27, 0x3f, 0xa8, 0x5f, 0xc5, 0x74, 0xbb, 0x6d, 0x30,
	0x31, 0x01, 0x4f, 0xcd, 0xec, 0xfc, 0xa6, 0xcf, 0xb3, 0xcf, 0x2c, 0x9c, 0xa5, 0xd1, 0x32, 0xe4,
	0x89, 0x9c, 0x44, 0x18, 0x86, 0x3c, 0x09, 0x27, 0xa9, 0x40, 0x85, 0x45, 0xe5, 0xea, 0x8a, 0x0c,
	0x16, 0x54, 0x2e, 0xf8, 0x1b, 0x8a, 0xd4, 0x4d, 0x30, 0xa6, 0x73, 0xd7, 0x0c, 0xb9, 0x06, 0x73,
	0x3e, 0xab, 0xd0, 0x99, 0x29, 0x2a, 0xd4, 0x94, 0xbd, 0x2f, 0x99, 0x54, 0xe4, 0x04, 0x9a, 0x11,
	0x86, 0xde, 0x9c, 0x0b, 0xbb, 0x32, 0xac, 0x8c, 0x5a, 0xd3, 0x46, 0x84, 0xe1, 0x3d, 0x17, 0x64,
	0x04, 0x3d, 0xa9, 0xe6, 0xb8, 0x54, 0x5e, 0xc0, 0x23, 0xe6, 0x25, 0x34, 0x66, 0x76, 0x55, 0x13,
	0xdd, 0xfc, 0xfc, 0x81, 0x47, 0xec, 0x99, 0xc6, 0xcc, 0x90, 0x4c, 0x88, 0x0d, 0xf2, 0x7f, 0x49,
	0x32, 0x21, 0x4a, 0xf2, 0x14, 0x5a, 0x31, 0x5d, 0x69, 0x4c, 0xda, 0xb5, 0x61, 0x65, 0x64, 0x4d,
	0xf7, 0x62, 0xba, 0xca, 0xfa, 0x92, 0x9c, 0x43, 0xaf, 0x68, 0x7a, 0x92, 0xaf, 0x99, 0x17, 0xfb,
	0x76, 0x5d, 0x33, 0x96, 0x61, 0x66, 0x7c, 0xcd, 0x9e, 0x7c, 0x32, 0x80, 0x76, 0xe9, 0x2c, 0x40,
	0xbb, 0xa1, 0xa5, 0xa0, 0x30, 0x15, 0xa0, 0x01, 0x72, 0x43, 0x01, 0xda, 0xcd, 0x12, 0xd0, 0x5e,
	0x02, 0x74, 0xf6, 0xc1, 0x32, 0x21, 0xc8, 0x14, 0x13, 0xc9, 0x1c, 0x0b, 0xda, 0x33, 0x85, 0xa9,
	0x09, 0xc5, 0xe9, 0x66, 0x21, 0x65, 0xa5, 0x69, 0x1f, 0xc1, 0xc1, 0x1d, 0x4d, 0xa9, 0xcf, 0x23,
	0xae, 0x38, 0x93, 0x05, 0x76, 0x0c, 0x87, 0x3f, 0x8f, 0x73, 0xfc, 0xf2, 0xab, 0x0a, 0xd6, 0x63,
	0x1e, 0xf8, 0x8b, 0xce, 0x9f, 0x2c, 0xa0, 0xae, 0x05, 0xc9, 0xd8, 0xdd, 0xb2, 0x21, 0x77, 0x73,
	0x3b, 0x7d, 0x77, 0x57, 0xdc, 0x18, 0xfd, 0x47, 0x18, 0xd4, 0x32, 0xeb, 0xe4, 0x62, 0x87, 0xc9,
	0xf2, 0xc2, 0xfd, 0xf1, 0x8e, 0x74, 0x29, 0xf3, 0x01, 0x9d, 0xcd, 0xab, 0x93, 0xeb, 0xad, 0x3f,
	0xf8, 0x25, 0xc0, 0xfe, 0xcd, 0x1f, 0xa7, 0x0a, 0xf9, 0xdb, 0xe6, 0x6b, 0x5d, 0x3f, 0x78, 0xbf,
	0xa1, 0x3f, 0x57, 0xdf, 0x01, 0x00, 0x00, 0xff, 0xff, 0xba, 0x95, 0x43, 0x36, 0x1e, 0x03, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// LoggingPluginClient is the client API for LoggingPlugin service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LoggingPluginClient interface {
	Start(ctx context.Context, in *StartRequest, opts ...grpc.CallOption) (*StartResponse, error)
	Stop(ctx context.Context, in *StopRequest, opts ...grpc.CallOption) (*StopResponse, error)
	// Capabilities allows the logging plugin to return a set of capabilities.
	// The client will fingerprint the logging plugin once at startup.
	Capabilities(ctx context.Context, in *CapabilitiesRequest, opts ...grpc.CallOption) (*CapabilitiesResponse, error)
}

type loggingPluginClient struct {
	cc grpc.ClientConnInterface
}

func NewLoggingPluginClient(cc grpc.ClientConnInterface) LoggingPluginClient {
	return &loggingPluginClient{cc}
}

func (c *loggingPluginClient) Start(ctx context.Context, in *StartRequest, opts ...grpc.CallOption) (*StartResponse, error) {
	out := new(StartResponse)
	err := c.cc.Invoke(ctx, "/hashicorp.nomad.plugins.logging.LoggingPlugin/Start", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *loggingPluginClient) Stop(ctx context.Context, in *StopRequest, opts ...grpc.CallOption) (*StopResponse, error) {
	out := new(StopResponse)
	err := c.cc.Invoke(ctx, "/hashicorp.nomad.plugins.logging.LoggingPlugin/Stop", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *loggingPluginClient) Capabilities(ctx context.Context, in *CapabilitiesRequest, opts ...grpc.CallOption) (*CapabilitiesResponse, error) {
	out := new(CapabilitiesResponse)
	err := c.cc.Invoke(ctx, "/hashicorp.nomad.plugins.logging.LoggingPlugin/Capabilities", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LoggingPluginServer is the server API for LoggingPlugin service.
type LoggingPluginServer interface {
	Start(context.Context, *StartRequest) (*StartResponse, error)
	Stop(context.Context, *StopRequest) (*StopResponse, error)
	// Capabilities allows the logging plugin to return a set of capabilities.
	// The client will fingerprint the logging plugin once at startup.
	Capabilities(context.Context, *CapabilitiesRequest) (*CapabilitiesResponse, error)
}

// UnimplementedLoggingPluginServer can be embedded to have forward compatible implementations.
type UnimplementedLoggingPluginServer struct {
}

func (*UnimplementedLoggingPluginServer) Start(ctx context.Context, req *StartRequest) (*StartResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Start not implemented")
}
func (*UnimplementedLoggingPluginServer) Stop(ctx context.Context, req *StopRequest) (*StopResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Stop not implemented")
}
func (*UnimplementedLoggingPluginServer) Capabilities(ctx context.Context, req *CapabilitiesRequest) (*CapabilitiesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Capabilities not implemented")
}

func RegisterLoggingPluginServer(s *grpc.Server, srv LoggingPluginServer) {
	s.RegisterService(&_LoggingPlugin_serviceDesc, srv)
}

func _LoggingPlugin_Start_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StartRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LoggingPluginServer).Start(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hashicorp.nomad.plugins.logging.LoggingPlugin/Start",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LoggingPluginServer).Start(ctx, req.(*StartRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LoggingPlugin_Stop_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StopRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LoggingPluginServer).Stop(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hashicorp.nomad.plugins.logging.LoggingPlugin/Stop",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LoggingPluginServer).Stop(ctx, req.(*StopRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LoggingPlugin_Capabilities_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CapabilitiesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LoggingPluginServer).Capabilities(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hashicorp.nomad.plugins.logging.LoggingPlugin/Capabilities",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LoggingPluginServer).Capabilities(ctx, req.(*CapabilitiesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _LoggingPlugin_serviceDesc = grpc.ServiceDesc{
	ServiceName: "hashicorp.nomad.plugins.logging.LoggingPlugin",
	HandlerType: (*LoggingPluginServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Start",
			Handler:    _LoggingPlugin_Start_Handler,
		},
		{
			MethodName: "Stop",
			Handler:    _LoggingPlugin_Stop_Handler,
		},
		{
			MethodName: "Capabilities",
			Handler:    _LoggingPlugin_Capabilities_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "plugins/logging/proto/logging.proto",
}
